{"version":3,"sources":["webpack:///./node_modules/babel-runtime/core-js/promise.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///src/views/blog/Edit.vue","webpack:///./src/views/blog/Edit.vue?9b5c","webpack:///./src/views/blog/Edit.vue","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/babel-runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/wangeditor/release/wangEditor.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js"],"names":["module","exports","default","__webpack_require__","__esModule","it","Constructor","name","forbiddenField","undefined","TypeError","classof","ITERATOR","Iterators","getIteratorMethod","global","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","head","last","notify","flush","parent","fn","domain","exit","next","e","enter","nextTick","navigator","standalone","resolve","promise","then","call","toggle","node","document","createTextNode","observe","characterData","data","task","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","ctx","$export","isObject","aFunction","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","empty","newPromiseCapability","f","USE_NATIVE","FakePromise","constructor","exec","PromiseRejectionEvent","isThenable","isReject","_n","chain","_c","value","_v","ok","_s","i","run","reaction","result","exited","handler","fail","reject","_h","onHandleUnhandled","length","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","v","onrejectionhandled","$reject","this","_d","_w","slice","$resolve","wrapper","executor","err","prototype","onFulfilled","onRejected","push","catch","C","G","W","F","S","r","capability","$$reject","x","iter","all","iterable","values","index","remaining","$index","alreadyCalled","race","core","P","R","finally","onFinally","isFunction","Edit","id","initEditor","_this","req","_this2","editor","html","create","getBlog","_this3","validateForm","blog","back","_this4","blog_Edit","render","_vm","$createElement","_self","staticClass","attrs","separator","to","path","label","maxlength","model","callback","$$v","$set","expression","ref","on","click","saveBtnClick","createBtnClick","title","author","abstract","domProps","innerHTML","content","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","defer","channel","port","invoke","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","hasOwnProperty","listener","event","args","arguments","Function","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","ArrayProto","Array","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","entries","that","step","iterator","iterFn","done","cof","TAG","ARG","O","T","B","key","tryGet","Object","callee","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","toString","keys","object","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","dP","DESCRIPTORS","SPECIES","KEY","configurable","get","SAFE_CLOSING","riter","from","skipClosing","safe","arr","_promise","_promise2","gen","apply","promiseCapability","try","callbackfn","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","un","ret","$$resolve","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","div","nodeType","selectorResult","replace","trim","createElement","children","querySelectorAll","$","elem","clone","deep","cloneList","cloneNode","first","types","split","target","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","className","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","remove","parentElement","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","timeout","qiniu","UA","_ua","userAgent","isWebkit","test","isIE","window","objForEach","arrForEach","fakeArr","getRandom","prefix","Math","random","replaceHtmlSymbol","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","c","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","UploadImg","_alert","alertInfo","debugInfo","customAlert","img","onload","onerror","onabort","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","encodeURIComponent","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","customConfig","_initConfig","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","_offAllEvent","varArgs","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","D"],"mappings":"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","file":"static/js/1.b2c61547ef64a6846362.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/promise.js\n// module id = //Fk\n// module chunks = 0 1","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-instance.js\n// module id = 2KxR\n// module chunks = 0 1","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 0 1","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_microtask.js\n// module id = 82Mu\n// module chunks = 0 1","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.promise.js\n// module id = CXw9\n// module chunks = 0 1","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.finally.js\n// module id = EqBC\n// module chunks = 0 1","<template>\n  <div class=\"page-blog-edit\">\n      <div class=\"breadcrumb\">\n      <el-breadcrumb separator=\"/\">\n          <el-breadcrumb-item :to=\"{path:'/' }\">首页</el-breadcrumb-item>\n          <el-breadcrumb-item :to=\"{name:'blogList'}\">博文管理</el-breadcrumb-item>\n          <el-breadcrumb-item>编辑文章</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n    <div class=\"editor\">\n      <div class=\"form\">\n        <el-form>\n          <el-form-item label=\"标题\">\n              <el-input v-model=\"blog.title\" :maxlength=\"30\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"作者\">\n              <el-input v-model=\"blog.author\" :maxlength=\"30\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"摘要\">\n              <el-input v-model=\"blog.abstract\" :maxlength=\"100\"></el-input>\n          </el-form-item>\n          <el-form-item>\n              <div ref=\"editor\"></div>\n          </el-form-item>\n          <el-form-item>\n            <el-button v-if=\"id\" @click=\"saveBtnClick\">保存</el-button>\n            <el-button v-else @click=\"createBtnClick\">创建</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"preview\">\n          <p class=\"tag\">预览</p>\n          <h2 class=\"title\">{{blog.title}}</h2>\n          <div class=\"author\">文 / {{blog.author}}</div>\n          <div class=\"abstract\">{{blog.abstract}}</div>\n          <div class=\"content blog-content\" v-html=\"blog.content\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport E from 'wangeditor'\nexport default {\n  data(){\n    return {\n       id:this.$route.query.id,\n       editor:null,\n       blog:{\n         title:'',\n         author:'',\n         abstract:'',\n         content:''\n       }\n    }\n  },\n  mounted(){\n    this.initEditor();\n  },\n  methods:{\n    //获取数据\n    async getBlog(){\n      let req = {id:this.id};\n      let res = await this.$api.getBlogById(req);\n      if(res.code == 200){\n        this.blog = res.data||{};\n        this.editor.txt.html(this.blog.content);//设置编辑信息\n      }else{\n        this.$message.error(\"系统错误\");\n      }\n    },\n    //初始化编辑器\n    initEditor(){\n      this.$nextTick(()=>{\n        this.editor = new E(this.$refs.editor);\n        this.editor.customConfig.menus = ['bold','italic','underline','link','image','code'];\n        this.editor.customConfig.zIndex = 0;\n        this.editor.customConfig.onchange = (html)=>{\n            // html 即变化之后的内容\n            this.blog.content = html;\n        }\n        this.editor.create();\n        //如果有id\n        if(this.id){\n          this.getBlog();\n        }\n      })\n    },\n    //验证\n    validateForm(){\n      //验证\n       if(this.blog.title==''){\n         this.$message.warning('请输入文章标题');\n         return false;\n       }\n       if(this.blog.author==''){\n         this.$message.warning('请输入文章作者');\n         return false;\n       }\n       if(this.blog.abstract==''){\n         this.$message.warning('请输入文章摘要');\n         return false;\n       }\n       return true;\n    },\n    //保存\n    async saveBtnClick(){\n       this.blog.content = this.editor.txt.html();\n       if(!this.validateForm()){\n          return false;\n       }\n       //修改\n      let res = await this.$api.updateBlog(this.blog);\n      if(res.code == 200){\n        this.$message.success('保存成功');\n        this.$router.back();\n      }else{\n        this.$message.error('保存失败');\n      }\n    },\n    //创建\n    async createBtnClick(){\n        this.blog.content = this.editor.txt.html();\n       if(!this.validateForm()){\n          return false;\n       }\n       //修改\n      let res = await this.$api.createBlog(this.blog);\n      if(res.code == 200){\n        this.$message.success('创建成功');\n        this.$router.back();\n      }else{\n        this.$message.error('保存失败');\n      }\n    }\n  }\n}\n</script>\n<style>\n.blog-content p,.blog-content div{\n  margin: 15px 0;\n}\n.blog-content img{\n  max-width: 100%;\n  display: inline-block;\n  margin: 0 auto;\n}\n.blog-content pre{\n  padding: 15px;\n  display: block;\n  background: #EEE;\n  overflow: auto;\n  border:1px solid #CCC;\n}\n</style>\n\n<style lang=\"less\" scoped>\n.page-blog-edit{\n   >.editor{\n     padding: 30px;\n     background: #FFF;\n     display: flex;\n     .form{\n       width: 500px;\n     }\n     .preview{\n       flex: 1;\n       width: 0;\n       background: #FFF;\n       padding: 0 30px;\n       .tag{\n         background: rgba(64,158,255,.1);\n         border: 1px solid rgba(64,158,255,.2);\n         color: #409eff;\n         padding: 5px 10px;\n       }\n       .title{\n         font-size: 20px;\n         font-weight: normal;\n         margin-top: 10px;\n       }\n       .author{\n         margin-top: 20px;\n         color: #999;\n       }\n       .abstract{\n         background: #EEE;\n         padding: 30px;\n         margin-top: 20px;\n         color: #666;\n         line-height: 26px;\n       }\n       .content{\n         margin-top: 20px;\n         word-break:break-all;\n       }\n     }\n   }\n}\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/blog/Edit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-blog-edit\"},[_c('div',{staticClass:\"breadcrumb\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{path:'/' }}},[_vm._v(\"首页\")]),_vm._v(\" \"),_c('el-breadcrumb-item',{attrs:{\"to\":{name:'blogList'}}},[_vm._v(\"博文管理\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"编辑文章\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"editor\"},[_c('div',{staticClass:\"form\"},[_c('el-form',[_c('el-form-item',{attrs:{\"label\":\"标题\"}},[_c('el-input',{attrs:{\"maxlength\":30},model:{value:(_vm.blog.title),callback:function ($$v) {_vm.$set(_vm.blog, \"title\", $$v)},expression:\"blog.title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"作者\"}},[_c('el-input',{attrs:{\"maxlength\":30},model:{value:(_vm.blog.author),callback:function ($$v) {_vm.$set(_vm.blog, \"author\", $$v)},expression:\"blog.author\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"摘要\"}},[_c('el-input',{attrs:{\"maxlength\":100},model:{value:(_vm.blog.abstract),callback:function ($$v) {_vm.$set(_vm.blog, \"abstract\", $$v)},expression:\"blog.abstract\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('div',{ref:\"editor\"})]),_vm._v(\" \"),_c('el-form-item',[(_vm.id)?_c('el-button',{on:{\"click\":_vm.saveBtnClick}},[_vm._v(\"保存\")]):_c('el-button',{on:{\"click\":_vm.createBtnClick}},[_vm._v(\"创建\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"preview\"},[_c('p',{staticClass:\"tag\"},[_vm._v(\"预览\")]),_vm._v(\" \"),_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.blog.title))]),_vm._v(\" \"),_c('div',{staticClass:\"author\"},[_vm._v(\"文 / \"+_vm._s(_vm.blog.author))]),_vm._v(\" \"),_c('div',{staticClass:\"abstract\"},[_vm._v(_vm._s(_vm.blog.abstract))]),_vm._v(\" \"),_c('div',{staticClass:\"content blog-content\",domProps:{\"innerHTML\":_vm._s(_vm.blog.content)}})])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-db5f6df8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/blog/Edit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-db5f6df8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Edit.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-db5f6df8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./Edit.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Edit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Edit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-db5f6df8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Edit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-db5f6df8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/blog/Edit.vue\n// module id = null\n// module chunks = ","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_task.js\n// module id = L42u\n// module chunks = 0 1","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array-iter.js\n// module id = Mhyx\n// module chunks = 0 1","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_for-of.js\n// module id = NWt+\n// module chunks = 0 1","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = SldL\n// module chunks = 0 1","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/promise.js\n// module id = U5ju\n// module chunks = 0 1","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = Xxa5\n// module chunks = 0 1","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-species.js\n// module id = bRrM\n// module chunks = 0 1","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_perform.js\n// module id = dNDb\n// module chunks = 0 1","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-detect.js\n// module id = dY0y\n// module chunks = 0 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/asyncToGenerator.js\n// module id = exGp\n// module chunks = 0 1","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_promise-resolve.js\n// module id = fJUb\n// module chunks = 0 1","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.try.js\n// module id = jKW+\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = jyFz\n// module chunks = 0 1","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_invoke.js\n// module id = knuC\n// module chunks = 0 1","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-call.js\n// module id = msXi\n// module chunks = 0 1","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_new-promise-capability.js\n// module id = qARP\n// module chunks = 0 1","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"><i/></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").+?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 500) {\n                // 间隔大于 500 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                val = encodeURIComponent(val);\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wangeditor/release/wangEditor.js\n// module id = sYY+\n// module chunks = 1","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_species-constructor.js\n// module id = t8x9\n// module chunks = 0 1","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine-all.js\n// module id = xH/j\n// module chunks = 0 1"],"sourceRoot":""}